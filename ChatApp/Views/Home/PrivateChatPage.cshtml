@model ChatApp.Models.ChatRoom
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    TempData["SenderId"] = Model.Sender.Id;
    Layout = "_LayoutChat";

}


<h1 class="h-50">Chat with @Model.Receivers[0].NickName</h1>
<p id="errorBox" class="text-danger"></p>
<div class="container">

    <div id="chatbox" class=""></div>
    <form id="sendMessageToPrivate">
        <div class="form-group">
            <input id="receiverId" asp-for="Receivers[0].Id" class="form-control" readonly hidden />
            <input id="senderId" asp-for="Sender.Id" class="form-control" readonly hidden />
            <label id="messageLabel" class="control-label" value="Message"></label>
            <input id="messageInput" class="form-control" minlength="1" required />

        </div>
        <div class="form-group">
            <input type="submit" value="Send" class="btn btn-primary mt-3" id="sendButton">
        </div>
    </form>

</div>


<script type="text/javascript">
    async function getPublicMessages() {
        $.ajax({
            type: "POST",
            url: '/Home/GetPrivateMessages',
            data: { "senderId": $("#senderId").val(), "receiverId": $("#receiverId").val() },
            dataType: "json",

            success: function (response) {
                console.log(response);


                // Hier gaan we de span met id "statusSpan" ophalen
                // en de text vervangen met de status.
                // Status krijgen we van de action Message mee.
                
                var firstWord = response.status.split(" ")[0]
                if (firstWord === "error"){
                    $("#errorBox").html(response.status);
                   // console.log("error")

                }               
                else{
                    $("#chatbox").html(response.status);
                    $("#chatbox").scrollTop($("#chatbox")[0].scrollHeight);
                }
                   
            },
            error: function (response) {
                // Indien onze request faalt, kunnen we hier een mooie
                // foutmelding tonen.
                // In ons geval gaan we een alert tonen op het scherm
                // (in praktijk moet je dit beter afhandelen!).
                console.log("error");

            }
        });
    }

    //getPublicMessages();
setInterval(getPublicMessages, 1000);
</script>